import argparse
import datetime
import os.path
from pathlib import Path
import re
import traceback

import tomlkit

import lxml.etree as etree


def main():
    parser = argparse.ArgumentParser(description="Given a taco XML file, try to generate an equivalent autotrail.py TOML")
    parser.add_argument('file', type=str, nargs='*')
    args = parser.parse_args()

    files = []
    for f in args.file:
        if os.path.isdir(f):
            files.extend(Path(f).rglob("*.xml"))
        else:
            files.append(Path(f))

    for f in files:
        f: Path
        try:
            process_file(f)
        except Exception as e:
            print(f"While processing {f.as_posix()!r}")
            print(traceback.format_exc())

def process_file(path):
    # if path.with_suffix(".toml").exists():
    #     raise RuntimeError(f"{path.with_suffix('.toml')} already exists, skipping")

    xmlp = etree.XMLParser(encoding='utf-8', strip_cdata=False)
    ret = tomlkit.document()
    ret.add(tomlkit.comment(f"Generated by xmltotoml.py from {path.as_posix()!r} at {datetime.datetime.now(datetime.timezone.utc)}"))

    with open(path, 'rb') as f:

        root = etree.parse(f, parser=xmlp)
        root : etree.ElementTree

        trails = list(root.findall('.//trail'))
        if len(trails) == 0 or len(trails) > 2:
            raise ValueError(f"found {len(trails)} trails, stopping")

        if len(set(t.get('traildata') for t in trails)) > 1:
            raise ValueError(f"found multiple trails pointing to different trl, stopping")

        trailfile = Path(trails[0].get('traildata'))
        if not trailfile.exists():
            raise ValueError(f"trail file {trailfile.as_posix()!r} not found")
        
        #ret["trail"] = trailfile.as_posix()
        ret.add(tomlkit.comment(f"trail = {trailfile.as_posix()!r}"))

        if trails[0].get('color'):
            ret["color"] = trails[0].get('color')

        cats : list[etree.ElementBase] = list(root.findall('.//markercategory'))
        leafcats : list[etree.ElementBase] = list(c for c in cats if len(c) == 0)

        if len(leafcats) == 1:
            ret["name"] = leafcats[0].get('displayname')
        else:
            raise ValueError(f"can't discover trail name from marker categories")

        kinds = set(["routes", "caves", "stunts"])
        if cats[1].get('name') in kinds:
            ret["kind"] = cats[1].get('name')[:-1]

        difficulties = set(["easy", "medium", "hard", "expert", "insane"])
        if cats[2].get('name') in difficulties:
            ret["difficulty"] = cats[2].get('name')
        
        for c in root.iter(tag=etree.Comment):
            c : etree.ElementBase
            match = re.search("Creator: *([A-Za-z0-9. ]+)", c.text)
            if match:
                ret["author"] = match.group(1)

        pois = list(root.findall('.//poi'))

        if len(set('.'.join(p.get('type').split('.')[:-1]) for p in pois)) > 1:
            raise ValueError("weird poi types")

        for p in pois:
            kind = p.get('type').split('.')[-1]
            if kind in ['start', 'finish']:
                continue

            aot = tomlkit.aot()
            aot.append(tomlkit.item({"xpos": p.get("xpos"), "ypos": p.get("ypos"), "zpos": p.get("zpos")}))
            ret.append(kind, aot)

    with open(trailfile.with_suffix(".toml"), 'w') as outf:
        tomlkit.dump(ret, outf)

main()